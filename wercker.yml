box: golang
dev:
  steps:
    - internal/watch:
        code: |
          go build ./...
          ./source
        reload: true
# Build definition
build:
  # The steps that will be executed on build
  steps:

    # golint step!
    - wercker/golint

    - script:
        name: debug
        code: |
          ls -l

    # Build the project
    - script:
        name: go build
        code: |
          go build ./...

    # Test the project
    - script:
        name: go test
        code: |
          go test ./...

    - script:
        name: copy artifacts to output dir
        code: |
          # artifacts
          ls -l
          cp ${WERCKER_ROOT}/source "$WERCKER_OUTPUT_DIR"

docker-push:

  box:
    id: golang

  steps:

    - script:
        name: copy binaries to /opt/app
        code: |
          mkdir -p /opt
          cp ${WERCKER_ROOT}/source /opt/source

    - script:
        name: echo docker tag
        code: |
          echo "DOCKER IMAGE:TAG"
          echo "quay.io/wercker/kubernetes-ci-cd:${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}"

    - internal/docker-push:
        repository: quay.io/wercker/kubernetes-ci-cd
        registry: https://quay.io
        username: $QUAY_USERNAME
        password: $QUAY_PASSWORD
        tag: ${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}
        entrypoint: /opt/source
        port: 5000/tcp

deploy-webapi:

  box:
    id: golang

  steps:

    - script:
        name: debug
        code: |
          echo "XXX"
          pwd
          ls -l
          echo $WERCKER_OUTPUT_DIR
          ls -l $WERCKER_OUTPUT_DIR
          echo $WERCKER_ROOT
          ls -l $WERCKER_ROOT

    - bash-template:
        cwd: webapi/deployment

    - script:
        name: Remove template files
        cwd: webapi/deployment
        code: |
          rm *.template.yaml

    - script:
        name: debug
        cwd: webapi/deployment
        code: |
          ls -l

    - script:
        name: echo tags
        code: |
          cat webapi/deployment/deployment.yaml
          echo "Docker image and tag:"
          echo "${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}"

    - kubectl:
        cwd: webapi/deployment
        server: ${KUBE_ENDPOINT}
        username: ${KUBE_USERNAME}
        password: ${KUBE_PASSWORD}
        insecure-skip-tls-verify: true
        command: --namespace ${KUBE_NAMESPACE} apply -f deployment.yaml
